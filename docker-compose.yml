version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: tuu-capricho-db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tuu-capricho-server
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ./backend:/usr/src/app
      - ./PDFs:/usr/src/app/PDFs
      - ./generated-agendas:/usr/src/app/generated-agendas
      - /usr/src/app/node_modules
    depends_on:
      db:
        condition: service_healthy
    command: npm run dev

  client:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tuu-capricho-client
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - server
    command: npm run dev

volumes:
  postgres-data: